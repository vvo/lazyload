{
  "name": "in-viewport",
  "description": "Get a callback when an element enters the viewport",
  "version": "0.2.5",
  "main": "build/in-viewport.min.js",
  "ignore": [
    "**/.*",
    "node_modules",
    "components",
    "test/*.js",
    "test/*.html"
  ],
  "gitHead": "90d0f7c93b92c68a91aec20a6c10c32f3c0ce8a3",
  "readme": "# inViewport\n\nKnow when an element is in the window viewport or a custom viewport.\n\n[![browser support](https://ci.testling.com/vvo/in-viewport.png)](https://ci.testling.com/vvo/in-viewport)\n\n## Usage\n\n### Immediate result\n\n```js\nvar elem = document.getElementById('myFancyDiv');\n\nvar isInViewport = inViewport(elem); // returns `true` or `false`\n\nalert('myFancyDiv is ' + isInViewport ? 'visible' : 'not visible' + ' in the window');\n```\n\n### Using a callback\n\nWe watch for your element to enters the viewport and call your callback when it does.\n\n```js\nvar elem = document.getElementById('myFancyDiv');\n\ninViewport(elem, visible);\n\nfunction visible(elt) {\n  alert(elt.id + ' is visible in the window !');\n}\n```\nThe first callback argument is always the elt that entered the viewport.\n\n### A custom container\n\nBy default, we use the current window as the reference viewport.\nBut you can also specify another element as a reference viewport.\n\n```js\nvar customContainer = document.getElementById('myFancyContainer');\nvar elem = document.getElementById('myFancyDiv');\n\ninViewport(elem, { container: customContainer }, visible);\n\nfunction visible() {\n  alert('myfancyDiv is visible in the `customContainer` !');\n}\n```\n\n### Specifying an offset\n\nBy default, when your element precisely enters the viewport, you get a callback / true result.\nBut maybe you want to know when your element is soon to be shown in the viewport.\nUse an `offset` param for that !\n\n```js\nvar elem = document.getElementById('myFancyDiv');\n\ninViewport(elem, { offset: 300 }, visible);\n\nfunction visible() {\n  alert('myfancyDiv is visible in the `customContainer` !');\n}\n```\n\nWhen your element is near `300px` of the viewport, you get your callback / true result.\n\n## Use cases\n\n* lazyloader (images, iframes)\n* infinite scroll\n* loading widgets only when needed\n* your ideas\n\n## Testing\n\nOpen `test/test.html` or use a headless browser:\n\n```bash\nnpm install -g mocha-phantomjs phantomjs\nnpm test\n```\n\n## Hacking\n\nYou need package.json dependencies and grunt.\n\n```bash\nnpm install\nnpm install -g grunt-cli\ngrunt watch\n```\n\nStart an http-server in root dir:\n\n```bash\nnpm install http-server -g\nhttp-server\n```\n\nOpen `test/test.html`, code, test, GOTO code.\n\n## Building\n\n```bash\nCLOSURE_PATH=\"~/path/to/compiler.jar\" grunt\n```\n\nYou get a `build/in-viewport.min.js` file.\n\n`compiler.jar` is [google closure compiler](https://code.google.com/p/closure-compiler/downloads/list) .jar location.\n\n## License\n\nCopyright (c) 2013 Vincent Voyer\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
  "readmeFilename": "readme.md",
  "_id": "in-viewport@0.2.5",
  "repository": {
    "type": "git",
    "url": "git://github.com/vvo/in-viewport.git"
  }
}